{"ast":null,"code":"import _classCallCheck from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/simple/dots-boxes/src/components/Box.js\";\nimport React, { Component } from 'react'; // import Konva from 'konva';\n\nimport { Rect } from 'react-konva';\n\nvar Box =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Box, _Component);\n\n  function Box() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Box);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Box)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      leftSide: false,\n      topSide: false,\n      rightSide: false,\n      bottomSide: false // componentWillMount =() => this.setState({color: this.props.color})\n      // componentDidUpdate(prevProps, prevState){\n      //      if(this.props.color !== this.state.color){\n      //         if( this.state.leftSide && this.state.topSide && this.state.rightSide && this.state.bottomSide){\n      //             this.setState({color: this.props.color})\n      //         }\n      //     }\n      // }\n      // componentWillReceiveProps = (nextProps) => {\n      //     if (nextProps !== this.props){\n      //         this.setState({\n      //             leftSide: this.props.leftSide,\n      //             topSide: this.props.topSide,\n      //             rightSide: this.props.rightSide,\n      //             bottomSide: this.props.bottomSide\n      //         })\n      //     }\n      // }\n      // componentWillUpdate = (nextProps, nextState) => {\n      //     if (nextProps !== this.props){\n      //         if( this.state.leftSide && this.state.topSide && this.state.rightSide && this.state.bottomSide){\n      //             this.setState({color: 'white'})\n      //         }\n      //     }  \n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(Box, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          left = _this$props.left,\n          top = _this$props.top,\n          right = _this$props.right,\n          bottom = _this$props.bottom; // console.log(topSide)\n\n      return React.createElement(Rect, {\n        x: left,\n        y: top,\n        width: right - left,\n        height: bottom - top,\n        fill: this.props.color //shadowBlur={2}\n        // stroke={'black'} \n        // strokeWidth={1}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Box;\n}(Component);\n\nexport { Box as default };","map":{"version":3,"sources":["/home/simple/dots-boxes/src/components/Box.js"],"names":["React","Component","Rect","Box","state","leftSide","topSide","rightSide","bottomSide","props","left","top","right","bottom","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,IAAT,QAAqB,aAArB;;IAEqBC,G;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,UAAU,EAAE,KALR,CAQR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AArCQ,K;;;;;;6BAuCA;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,GADT,eACSA,GADT;AAAA,UACcC,KADd,eACcA,KADd;AAAA,UACqBC,MADrB,eACqBA,MADrB,EAEJ;;AACA,aACI,oBAAC,IAAD;AAEI,QAAA,CAAC,EAAEH,IAFP;AAGI,QAAA,CAAC,EAAEC,GAHP;AAII,QAAA,KAAK,EAAEC,KAAK,GAAGF,IAJnB;AAKI,QAAA,MAAM,EAAEG,MAAM,GAAGF,GALrB;AAMI,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWK,KANrB,CAOI;AACA;AACA;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAaH;;;;EAxD4Bb,S;;SAAZE,G","sourcesContent":["import React, { Component } from 'react';\n// import Konva from 'konva';\nimport { Rect } from 'react-konva';\n\nexport default class Box extends Component{\n    state = {\n        \n        leftSide: false,\n        topSide: false,\n        rightSide: false,\n        bottomSide: false\n    }\n\n    // componentWillMount =() => this.setState({color: this.props.color})\n\n    // componentDidUpdate(prevProps, prevState){\n    //      if(this.props.color !== this.state.color){\n    //         if( this.state.leftSide && this.state.topSide && this.state.rightSide && this.state.bottomSide){\n    //             this.setState({color: this.props.color})\n    //         }\n    //     }\n    // }\n\n    // componentWillReceiveProps = (nextProps) => {\n    //     if (nextProps !== this.props){\n           \n    //         this.setState({\n    //             leftSide: this.props.leftSide,\n    //             topSide: this.props.topSide,\n    //             rightSide: this.props.rightSide,\n    //             bottomSide: this.props.bottomSide\n    //         })\n    //     }\n    // }\n\n    // componentWillUpdate = (nextProps, nextState) => {\n    //     if (nextProps !== this.props){\n            \n    //         if( this.state.leftSide && this.state.topSide && this.state.rightSide && this.state.bottomSide){\n    //             this.setState({color: 'white'})\n    //         }\n    //     }  \n    // }\n\n    render(){\n        const {left, top, right, bottom} = this.props\n        // console.log(topSide)\n        return(\n            <Rect\n                \n                x={left}\n                y={top}\n                width={right - left}\n                height={bottom - top}\n                fill={this.props.color} \n                //shadowBlur={2}\n                // stroke={'black'} \n                // strokeWidth={1}\n            /> \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}