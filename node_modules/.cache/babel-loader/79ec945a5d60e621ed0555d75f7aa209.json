{"ast":null,"code":"import _classCallCheck from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/simple/dots-boxes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/simple/dots-boxes/src/components/BoxCanvas.js\";\nimport React, { Component } from 'react';\nimport { WIDTH, HEIGHT, COLORS } from './constants';\n\nvar BoxCanvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoxCanvas, _Component);\n\n  function BoxCanvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoxCanvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoxCanvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateCanvas = function () {\n      var ctx = _this.refs.canvas.getContext('2d');\n\n      ctx.fillStyle = COLORS.body;\n      ctx.fillRect(0, 0, 100, 100);\n    };\n\n    _this.drawBody = function () {\n      return _this.ctx.fillStyle = COLORS.body;\n    };\n\n    return _this;\n  }\n\n  _createClass(BoxCanvas, [{\n    key: \"componentDidlMount\",\n    // canv = this.refs.canvas;\n    // ctx = this.refs.canvas.getContext('2d');\n    value: function componentDidlMount() {\n      this.refs.canvas.width = WIDTH;\n      this.refs.canvas.heigth = HEIGHT;\n      this.updateCanvas();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateCanvas();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(COLORS.body);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        className: \"canvasBody\",\n        width: WIDTH,\n        height: HEIGHT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BoxCanvas;\n}(Component);\n\nexport { BoxCanvas as default };","map":{"version":3,"sources":["/home/simple/dots-boxes/src/components/BoxCanvas.js"],"names":["React","Component","WIDTH","HEIGHT","COLORS","BoxCanvas","updateCanvas","ctx","refs","canvas","getContext","fillStyle","body","fillRect","drawBody","width","heigth","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,MAAvB,QAAoC,aAApC;;IAGqBC,S;;;;;;;;;;;;;;;;;;UAiBjBC,Y,GAAe,YAAM;AACjB,UAAMC,GAAG,GAAG,MAAKC,IAAL,CAAUC,MAAV,CAAiBC,UAAjB,CAA4B,IAA5B,CAAZ;;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgBP,MAAM,CAACQ,IAAvB;AACAL,MAAAA,GAAG,CAACM,QAAJ,CAAa,CAAb,EAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB;AACH,K;;UAEDC,Q,GAAW;AAAA,aAAM,MAAKP,GAAL,CAASI,SAAT,GAAqBP,MAAM,CAACQ,IAAlC;AAAA,K;;;;;;;AArBX;AAEA;yCAEoB;AAChB,WAAKJ,IAAL,CAAUC,MAAV,CAAiBM,KAAjB,GAAyBb,KAAzB;AACA,WAAKM,IAAL,CAAUC,MAAV,CAAiBO,MAAjB,GAA0Bb,MAA1B;AACA,WAAKG,YAAL;AACH;;;yCAEmB;AAChB,WAAKA,YAAL;AACH;;;6BAWO;AAEJW,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACQ,IAAnB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,YAA/B;AAA4C,QAAA,KAAK,EAAEV,KAAnD;AAA0D,QAAA,MAAM,EAAEC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAOH;;;;EAnCkCF,S;;SAAlBI,S","sourcesContent":["import React, { Component } from 'react';\nimport {WIDTH, HEIGHT, COLORS} from './constants'\n\n\nexport default class BoxCanvas extends Component{\n    \n    // canv = this.refs.canvas;\n\n    // ctx = this.refs.canvas.getContext('2d');\n\n    componentDidlMount(){\n        this.refs.canvas.width = WIDTH;\n        this.refs.canvas.heigth = HEIGHT;\n        this.updateCanvas()\n    }\n\n    componentDidUpdate(){\n        this.updateCanvas()\n    }\n\n    \n    updateCanvas = () => {\n        const ctx = this.refs.canvas.getContext('2d');\n        ctx.fillStyle = COLORS.body\n        ctx.fillRect(0,0, 100, 100);\n    }\n    \n    drawBody = () => this.ctx.fillStyle = COLORS.body\n    \n    render(){   \n        \n        console.log(COLORS.body)\n        return(\n            <div>\n                <canvas ref='canvas' className='canvasBody' width={WIDTH} height={HEIGHT}>\n\n                </canvas>   \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}